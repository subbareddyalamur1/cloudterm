# =============================================================================
# CloudTerm - Modern AWS EC2 Terminal with Auto-Discovery
# Docker Compose Configuration
# =============================================================================

services:
  cloudterm:
    container_name: cloudterm-app
    build:
      context: .
      dockerfile: Dockerfile
    image: cloudterm:latest
    ports:
      - "5000:5000"  # Application port
    volumes:
      # Mount AWS credentials (read-only for security)
      - ~/.aws:/home/appuser/.aws:ro
      # Mount instances configuration (fallback for auto-scan)
      - ./instances_list.yaml:/app/instances_list.yaml:rw
    environment:
      # Application settings
      - FLASK_APP=app.py
      - FLASK_ENV=production
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - PORT=5000
      
      # Auto-scan configuration
      - TAG1=${TAG1:-Customer}        # Root level AWS tag for grouping
      - TAG2=${TAG2:-Environment}     # Branch level AWS tag for grouping
      
      # AWS configuration
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-us-east-1}
      - AWS_PROFILE=${AWS_PROFILE:-default}
    
    # Resource limits for production use
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    
    # Restart policy
    restart: unless-stopped
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# =============================================================================
# Networks (optional - for multi-service setups)
# =============================================================================
networks:
  default:
    name: cloudterm-network
    driver: bridge
